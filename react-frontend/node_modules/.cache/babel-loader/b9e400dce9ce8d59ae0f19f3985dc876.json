{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/src/App.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Login from '../src/Login';\nimport Register from '../src/Register';\nimport PrinOn from './PrinOn';\nimport CryptoPeriodD from './CryptoPeriodD';\nimport CryptoPeriodM from './CryptoPeriodM';\nimport CryptoPeriodH from './CryptoPeriodH';\nimport PrinOff from './PrinOff';\nimport Admin from './Admin';\nimport AddCrypto from './AddCrypto';\nimport io from 'socket.io-client';\nimport OAuth from './OAuth';\nimport { API_URL } from './config';\nimport './App.css';\nconst socket = io(API_URL);\nconst providers = ['twitter', 'google', 'facebook', 'github'];\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    fetch(`${API_URL}/wake-up`).then(res => {\n      if (res.ok) {\n        this.setState({\n          loading: false\n        });\n      }\n    });\n  }\n\n  render() {\n    const buttons = (providers, socket) => providers.map(provider => React.createElement(OAuth, {\n      provider: provider,\n      key: provider,\n      socket: socket,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }));\n\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'wrapper',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'container',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, providers.map(provider => React.createElement(OAuth, {\n      provider: provider,\n      key: provider,\n      socket: socket,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    })))), React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: PrinOff,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/PrinOn\",\n      component: PrinOn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/Register\",\n      component: Register,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/CryptoPeriodD/:Id\",\n      component: CryptoPeriodD,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/CryptoPeriodH/:Id\",\n      component: CryptoPeriodH,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/CryptoPeriodM/:Id\",\n      component: CryptoPeriodM,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/Login\",\n      component: Login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/Admin\",\n      component: Admin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/AddCrypto\",\n      component: AddCrypto,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/usr/src/app/src/App.js"],"names":["React","Component","BrowserRouter","Router","Route","Switch","Login","Register","PrinOn","CryptoPeriodD","CryptoPeriodM","CryptoPeriodH","PrinOff","Admin","AddCrypto","io","OAuth","API_URL","socket","providers","App","state","loading","componentDidMount","fetch","then","res","ok","setState","render","buttons","map","provider"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Login  from '../src/Login';\nimport  Register from '../src/Register';\nimport PrinOn from './PrinOn';\nimport CryptoPeriodD from './CryptoPeriodD';\nimport CryptoPeriodM from './CryptoPeriodM';\nimport CryptoPeriodH from './CryptoPeriodH';\nimport PrinOff from './PrinOff';\nimport Admin from './Admin';\nimport AddCrypto from './AddCrypto';\n\nimport io from 'socket.io-client'\nimport OAuth from './OAuth'\nimport { API_URL } from './config'\nimport './App.css'\nconst socket = io(API_URL)\nconst providers = ['twitter', 'google', 'facebook', 'github']\n\nclass App extends Component {\n\n    state = {\n        loading: true\n    }\n\n    componentDidMount() {\n        fetch(`${API_URL}/wake-up`)\n            .then(res => {\n                if (res.ok) {\n                    this.setState({ loading: false })\n                }\n            })\n    }\n\n  render() {\n      const buttons = (providers, socket) =>\n          providers.map(provider =>\n              <OAuth\n                  provider={provider}\n                  key={provider}\n                  socket={socket}\n              />\n          )\n    return (\n\n      <React.Fragment>\n          <div className={'wrapper'}>\n              <div className={'container'}>\n                  {providers.map(provider =>\n                      <OAuth\n                          provider={provider}\n                          key={provider}\n                          socket={socket}\n                      />\n                  )}\n              </div>\n          </div>\n        <Router>\n         \n            <Switch>\n            <Route exact path=\"/\" component={PrinOff} />\n             \n              <Route  path=\"/PrinOn\" component={PrinOn} />\n              <Route path=\"/Register\" component={Register} />\n              <Route  path=\"/CryptoPeriodD/:Id\" component={CryptoPeriodD} />\n              <Route  path=\"/CryptoPeriodH/:Id\" component={CryptoPeriodH} />\n              <Route  path=\"/CryptoPeriodM/:Id\" component={CryptoPeriodM} />\n\n              <Route path=\"/Login\" component={Login} />\n              <Route path=\"/Admin\" component={Admin} />\n              <Route path=\"/AddCrypto\" component={AddCrypto} />\n            </Switch>\n         \n        </Router>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}