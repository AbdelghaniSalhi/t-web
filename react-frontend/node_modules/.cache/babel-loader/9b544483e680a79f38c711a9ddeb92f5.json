{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/src/AjouterCrypto.js\";\nimport React, { Component } from \"react\";\nimport \"./assets/style.css\";\nimport axios from 'axios';\nimport { Table } from 'react-bootstrap';\nimport Button from 'react-bootstrap/Button';\nlet arr = [];\nlet base = [];\nlet aEnvoyer = [];\n\nclass AjouterCrypto extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      posts: []\n    };\n    this.state = {\n      posts: []\n    };\n    this.add = this.add.bind(this);\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:6200/cryptos/liste').then(response => {\n      for (let i = 0; i < response.data.length; i++) {\n        base.push(response.data[i].symbole);\n      }\n\n      axios.get('http://localhost:6200/users/profile', {\n        headers: {\n          \"auth-token\": localStorage.getItem(\"auth-token\")\n        }\n      }).then(response => {\n        for (let i = 0; i < response.data.user.cryptoCurrencies.length; i++) {\n          if (!base.includes(response.data.user.cryptoCurrencies[i])) {\n            arr.push(response.data.user.cryptoCurrencies[i]);\n          }\n        }\n\n        console.log(base);\n        console.log(arr);\n        this.setState({\n          posts: arr\n        });\n      }).catch(err => {\n        alert(err);\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  add(id) {\n    if (!aEnvoyer.includes(id)) {\n      aEnvoyer.push(id);\n    }\n\n    console.log(arr);\n  }\n\n  submit(event) {\n    event.preventDefault();\n    console.log(arr);\n    axios.put('http://localhost:6200/users/profile', {\n      cryptoCurrencies: aEnvoyer\n    }, {\n      headers: {\n        \"auth-token\": localStorage.getItem(\"auth-token\")\n      }\n    }).then(response => {\n      alert(\"AjoutÃ©\"); //console.log(localStorage.getItem(\"auth-token\"))\n\n      window.location.replace('/Login');\n    }).catch(err => {\n      alert(err);\n    }); //window.location.replace('/PrinOn');\n  }\n\n  render() {\n    const posts = this.state.posts;\n    return React.createElement(\"div\", {\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"f-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.submit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"List of Cryptocurrencies \"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      size: \"sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Symbol\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, posts.length ? posts.map(post => React.createElement(\"tr\", {\n      key: post.symbole,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, post.symbole), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.add.bind(this, post.symbole),\n      variant: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Add\"), \" \"))) : null)), React.createElement(\"div\", {\n      className: \"createAccount\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Submit\")))));\n  }\n\n}\n\nexport default AjouterCrypto;","map":{"version":3,"sources":["/usr/src/app/src/AjouterCrypto.js"],"names":["React","Component","axios","Table","Button","arr","base","aEnvoyer","AjouterCrypto","constructor","props","state","posts","add","bind","componentDidMount","get","then","response","i","data","length","push","symbole","headers","localStorage","getItem","user","cryptoCurrencies","includes","console","log","setState","catch","err","alert","error","id","submit","event","preventDefault","put","window","location","replace","render","map","post"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./assets/style.css\";\nimport axios from 'axios';\nimport {Table } from 'react-bootstrap';\nimport Button from 'react-bootstrap/Button';\n\nlet arr=[];\nlet base=[]\nlet aEnvoyer=[];\n\nclass AjouterCrypto extends Component {\n\n    constructor(props){\n       super(props);\n       this.state = {\n           posts:[]\n       };\n      \n       this.add = this.add.bind(this);\n    }\n    state ={\n        posts:[]\n    }\n\n    componentDidMount(){\n       axios.get('http://localhost:6200/cryptos/liste')\n       .then(response =>{\n            for(let i = 0; i<response.data.length; i++){\n                base.push(response.data[i].symbole) \n            }\n            axios.get('http://localhost:6200/users/profile',{headers : {\"auth-token\": localStorage.getItem(\"auth-token\")}})\n            .then(response => {\n                for(let i = 0; i<response.data.user.cryptoCurrencies.length; i++){\n                    if (!base.includes(response.data.user.cryptoCurrencies[i])){\n                        arr.push(response.data.user.cryptoCurrencies[i])\n                    }\n                }\n                console.log(base)\n                console.log(arr)\n                this.setState({posts: arr})\n            }).catch(err => {\n                alert(err);\n            })\n        }).catch(error=>{\n            console.log(error)\n        })\n       }\n\n       add(id){\n        if ( !aEnvoyer.includes(id)){\n        aEnvoyer.push(id);\n        }\n        console.log(arr)\n \n    }\n    submit(event){\n        event.preventDefault()\n        console.log(arr)\n        axios.put('http://localhost:6200/users/profile', {cryptoCurrencies:aEnvoyer} ,{headers : {\"auth-token\": localStorage.getItem(\"auth-token\")}})\n        .then(response => {\n            alert(\"AjoutÃ©\");\n            //console.log(localStorage.getItem(\"auth-token\"))\n            window.location.replace('/Login');\n    \n        }).catch(err => {\n            alert(err)\n        })\n        //window.location.replace('/PrinOn');\n    }\n       render(){\n       const { posts}=this.state\n       return(\n           <div className=\"wrapper\">\n               <div className=\"f-wrapper\"> \n               <form onSubmit={this.submit}>\n                    <p></p>\n                    <h1>List of Cryptocurrencies </h1>\n                    <p></p>\n                    <p></p>\n                \n                <Table striped bordered hover size=\"sm\">\n                        <thead>\n                            <tr>\n                                \n                                <th>Symbol</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                        {\n                        posts.length ?\n                    \n                        posts.map(post=> <tr key={post.symbole}>\n                            \n                            <td>{post.symbole}</td>\n                            <td><Button onClick={this.add.bind(this, post.symbole)} variant=\"secondary\">Add</Button> </td>\n                            </tr>):\n                            null\n                            }   \n                        </tbody>\n                    </Table>\n                   \n                    <div className=\"createAccount\">\n            <button type=\"submit\"  className=\"btn btn-primary\" >Submit</button>\n          </div>\n                    </form>\n                </div>\n           </div>\n\n       )\n       }}\n       export default AjouterCrypto"]},"metadata":{},"sourceType":"module"}